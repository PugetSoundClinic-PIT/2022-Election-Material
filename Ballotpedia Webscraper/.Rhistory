panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
### Step 6: Create map!
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, 1), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, 1), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, 1), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
sample_data <- raw_data %>%
filter(!is.na(perc_black)) %>%
filter(year == 2018) %>%
mutate(perc_black = black_jail_pop / white_jail_pop) %>%
mutate(more_black = perc_black > 1) %>%
select(white_jail_pop, black_jail_pop, year, fips, state, county_name)
sample_data <- raw_data %>%
select(white_jail_pop, black_jail_pop, year, fips, state, county_name) %>%
filter(!is.na(perc_black)) %>%
filter(year == 2018) %>%
mutate(perc_black = black_jail_pop / white_jail_pop) %>%
mutate(more_black = perc_black > 1)
sample_data <- raw_data %>%
select(white_jail_pop, black_jail_pop, year, fips, state, county_name) %>%
mutate(perc_black = black_jail_pop / white_jail_pop) %>%
filter(!is.na(perc_black)) %>%
filter(year == 2018) %>%
mutate(more_black = perc_black > 1)
county_shapes <- map_data("county") %>%
unite(polyname, region, subregion, sep = ",") %>%
left_join(county.fips, by = "polyname")
map_data <- county_shapes %>%
left_join(sample_data, by = "fips")
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = more_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_binned(na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
sample_data <- raw_data %>%
select(white_jail_pop, black_jail_pop, year, fips, state, county_name) %>%
mutate(perc_black = black_jail_pop / white_jail_pop) %>%
filter(!is.na(perc_black)) %>%
filter(year == 2018)
county_shapes <- map_data("county") %>%
unite(polyname, region, subregion, sep = ",") %>%
left_join(county.fips, by = "polyname")
map_data <- county_shapes %>%
left_join(sample_data, by = "fips")
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(1, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(0, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(1, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("Black VS White percetage in Jail per state in US")
perc_black_map
perc_black_map <- ggplot(map_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = perc_black),
color = "#d3d3d3", size = 0.3
) +
coord_map() +
scale_fill_continuous(limits = c(1, max(map_data$perc_black)), na.value = "white") +
blank_theme +
ggtitle("US Locations Where Black VS White Proportion over 1")
perc_black_map
data_ggp <- raw_data(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
ggp <- ggplot(data_ggp, aes(x, y, col = group)) +             # Create ggplot2 plot
geom_line()
ggp
raw_data(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
data_ggp <- raw_data.frame(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
data_ggp <- data.frame(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
ggp <- ggplot(data_ggp, aes(x, y, col = group)) +             # Create ggplot2 plot
geom_line()
ggp
data.frame(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
ggp <- ggplot(data_ggp, aes(x, y, col = group)) +             # Create ggplot2 plot
geom_line() +
labs(x = "Year", y = "Jail Population Count",
title = "Different Races' Jail Population Count per Year", col = "races")
ggp
data_ggp <- data.frame(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("aapi_jail_pop", nrow(raw_data)),
rep("black_jail_pop", nrow(raw_data)),
rep("latinx_jail_pop", nrow(raw_data)),
rep("native_jail_pop", nrow(raw_data)),
rep("white_jail_pop", nrow(raw_data)),
rep("other_race_jail_pop", nrow(raw_data))))
head(data_ggp)
ggp <- ggplot(data_ggp, aes(x, y, col = group)) +             # Create ggplot2 plot
geom_line() +
labs(x = "Year", y = "Jail Population Count",
title = "Different Races' Jail Population Count per Year", col = "races")
ggp
data_ggp <- data.frame(x = raw_data$year,                            # Reshape data frame
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("Asian American / Pacific Islander", nrow(raw_data)),
rep("Black", nrow(raw_data)),
rep("Latinx", nrow(raw_data)),
rep("Native American", nrow(raw_data)),
rep("White", nrow(raw_data)),
rep("Unknown or Other Racial Category", nrow(raw_data))))
head(data_ggp)
ggp <- ggplot(data_ggp, aes(x, y, col = group)) +             # Create ggplot2 plot
geom_line() +
labs(x = "Year", y = "Jail Population Count",
title = "Different Races' Jail Population Count per Year", col = "Races")
ggp
perc_black_map
perc_black_map
not_null_data <- raw_data %>%
filter(is.na(female_jail_pop)) %>%
filter(is.na(female_jail_pop)) %>%
select(female_jail_pop, male_jail_pop)
not_null_data <- raw_data %>%
filter(!is.na(female_jail_pop)) %>%
filter(!is.na(female_jail_pop)) %>%
select(female_jail_pop, male_jail_pop)
male_female_prop <- ggplot(data = not_null_data, aes(x = female_jail_pop, y = male_jail_pop)) +
geom_point() +
labs(x = "Year", y = "Total_Shots", title = "Total Shots Per Year")
male_female_prop
not_null_data <- raw_data %>%
filter(!is.na(female_jail_pop)) %>%
filter(!is.na(female_jail_pop)) %>%
select(female_jail_pop, male_jail_pop)
male_female_prop <- ggplot(data = not_null_data, aes(x = female_jail_pop, y = male_jail_pop)) +
geom_point() +
labs(x = "Female Prison Population Count", y = "Male Prison Population Count",
title = "Female VS Male Prison Population Count")
male_female_prop
not_null_data <- raw_data %>%
filter(!is.na(black_jail_pop)) %>%
filter(!is.na(white_jail_pop)) %>%
select(black_jail_pop, white_jail_pop)
black_white_prop <- ggplot(data = not_null_data, aes(x = black_jail_pop, y = white_jail_pop)) +
geom_point() +
labs(x = "Female Prison Population Count", y = "Male Prison Population Count",
title = "Female VS Male Prison Population Count")
black_white_prop
not_null_data <- raw_data %>%
filter(!is.na(black_jail_pop)) %>%
filter(!is.na(white_jail_pop)) %>%
select(black_jail_pop, white_jail_pop)
black_white_prop <- ggplot(data = not_null_data, aes(x = black_jail_pop, y = white_jail_pop)) +
geom_point() +
labs(x = "Black Prison Population Count", y = "White Prison Population Count",
title = "Black VS White Prison Population Count")
black_white_prop
data_ggp <- data.frame(x = raw_data$year,
y = c(raw_data$aapi_jail_pop, raw_data$black_jail_pop,
raw_data$latinx_jail_pop,raw_data$native_jail_pop,
raw_data$white_jail_pop,raw_data$other_race_jail_pop),
group = c(rep("Asian American / Pacific Islander", nrow(raw_data)),
rep("Black", nrow(raw_data)),
rep("Latinx", nrow(raw_data)),
rep("Native American", nrow(raw_data)),
rep("White", nrow(raw_data)),
rep("Unknown or Other Racial Category", nrow(raw_data))))
head(data_ggp)
race_over_year <- ggplot(data_ggp, aes(x, y, col = group)) +
geom_line() +
labs(x = "Year", y = "Jail Population Count",
title = "Different Races' Jail Population Count per Year", col = "Races")
race_over_year
max_total <- raw_data %>%
filter(total_jail_pop == max(total_jail_pop, na.rm = T)) %>%
pull(total_jail_pop)
max_total
raw_data %>%
summarize(ave_jail_total = ave(total_jail_pop)) %>%
pull(ave_jail_total)
raw_data %>%
summarize(ave_jail_total = ave(total_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_total)
raw_data %>%
summarize(ave_jail_total = ave(total_jail_pop, na.rm = TRUE))
raw_data %>%
summarize(ave_jail_total = mean(total_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_total)
ave_total <- raw_data %>%
summarize(ave_jail_total = mean(total_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_total)
max_total
raw_data %>%
summarize(ave_jail_black = mean(black_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_black)
ave_black <- raw_data %>%
summarize(ave_jail_black = mean(black_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_black)
ave_white <- raw_data %>%
summarize(ave_jail_white = mean(white_jail_pop, na.rm = TRUE)) %>%
pull(ave_jail_white)
ave_white
black_white_prop
raw_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
# organize the data
og_raw_data <- raw_data %>%
filter(country != "Non-OECD") %>%
filter(country != "Non KP Annex B") %>%
filter(country != "Asia") %>%
filter(country != "KP Annex B") %>%
filter(country != "OECD") %>%
filter(country != "EU-27") %>%
filter(country != "EU-28") %>%
filter(country != "Africa") %>%
filter(country != "Europe") %>%
filter(country != "Europe (excl. EU-28)") %>%
filter(country != "North America (excl. USA)") %>%
filter(country != "North America") %>%
filter(country != "Asia (excl. China & India)") %>%
filter(country != "International transport") %>%
filter(country != "Statistical Difference") %>%
filter(country != "Europe (excl. EU-27)") %>%
filter(country != "South America") %>%
filter(!is.na(co2)) %>%
select(year, country, co2)
library(tidyverse)
# organize the data
og_raw_data <- raw_data %>%
filter(country != "Non-OECD") %>%
filter(country != "Non KP Annex B") %>%
filter(country != "Asia") %>%
filter(country != "KP Annex B") %>%
filter(country != "OECD") %>%
filter(country != "EU-27") %>%
filter(country != "EU-28") %>%
filter(country != "Africa") %>%
filter(country != "Europe") %>%
filter(country != "Europe (excl. EU-28)") %>%
filter(country != "North America (excl. USA)") %>%
filter(country != "North America") %>%
filter(country != "Asia (excl. China & India)") %>%
filter(country != "International transport") %>%
filter(country != "Statistical Difference") %>%
filter(country != "Europe (excl. EU-27)") %>%
filter(country != "South America") %>%
filter(!is.na(co2)) %>%
select(year, country, co2)
# relevant values
avg_co2 <- og_raw_data %>%
filter(year == 2018) %>%
filter(country != "World") %>%
summarize(ave_temp = mean(co2, na.rm = TRUE)) %>%
summarize(rounded_temp = round(ave_temp, digits = 2)) %>%
pull(rounded_temp)
min_country <- og_raw_data %>%
filter(year == 2018) %>%
filter(co2 == min(co2, na.rm = T)) %>%
pull(country)
max_country <- og_raw_data %>%
filter(country != "World") %>%
filter(co2 == max(co2, na.rm = T)) %>%
pull(country)
min_year <- og_raw_data %>%
filter(country == "World") %>%
filter(co2 == min(co2, na.rm = T)) %>%
pull(year)
max_year <- og_raw_data %>%
filter(country == "World") %>%
filter(co2 == max(co2, na.rm = T)) %>%
pull(year)
# Start shinyServer
server <- function(input, output) {
output$introduction <- renderText({
intro <- paste0("In the range of the year 1751 to 2018,
the year that the world has
the least production based
Carbon Dioxide emissions
is ", min_year,
" and the year that has the most
is ", max_year, ". That means the
production based
Carbon Dioxide emissions has been
increaing all these years. In the most
recent year, 2018, the country that
has the least production based
Carbon Dioxide emissions is ", min_country, " and
the country that has the most is ",
max_country, ". The average amount of
production based
Carbon Dioxide emissions among all countries
in 2018 is ", avg_co2, ".")
return(intro)
})
output$scatter <- renderPlotly({
plot_data <- og_raw_data %>%
filter(year > input$year_choice[1], year < input$year_choice[2]) %>%
filter(country == input$country_choice)
plot <- ggplot(data = plot_data) +
geom_point(
mapping = aes_string(x = "year", y = "co2")
) +
labs(x = "Year", y = "Production-based Emissions of Carbon Dioxide",
title = paste0(input$country_choice, "'s Annual Production-based Emissions of CO2"))
ggplotly(plot)
})
}
shiny::runApp('Desktop/INFO201/a4-peiwenf')
plot_data <- og_raw_data %>%
filter(year > input$year_choice[1], year < input$year_choice[2]) %>%
filter(country == input$country_choice)
plot <- ggplot(data = plot_data) +
geom_point(
mapping = aes_string(x = "year", y = "co2")
) +
labs(x = "Year", y = "Production-based Emissions of Carbon Dioxide",
title = paste0(input$country_choice, "'s Annual Production-based Emissions of CO2"))
runApp('Desktop/INFO201/a4-peiwenf')
runApp('Desktop/INFO201/a4-peiwenf')
runApp('Desktop/INFO201/a4-peiwenf')
runApp('Desktop/INFO201/a4-peiwenf')
library(shiny)
library(tidyverse)
library(plotly)
raw_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
runApp('Desktop/INFO201/a4-peiwenf')
shiny::runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
?shinytheme
??shinytheme
install.packages("shinythemes")
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
shiny::runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
shiny::runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/INFO201/Final Project/project-peiwenf/Final Deliverable')
?data.frame()
?data.table::
??data.table
?data
library(data.table)
install.packages("data.table")
install.packages("data.table")
library(data.table)
install.packages('data.table')
install.packages("data.table")
DT = data.table(
ID = c("b","b","b","a","a","c"),
a = 1:6,
b = 7:12,
c = 13:18
)
library(data.table)
install.packages('data.table')
install.packages("data.table")
library(data.table)
DT = data.table(
ID = c("b","b","b","a","a","c"),
a = 1:6,
b = 7:12,
c = 13:18
)
View(DT)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = FALSE)
data(father.son, package="UsingR")
install.packages("UsingR")
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = FALSE)
data(father.son, package="UsingR")
fs <- father.son %>%
mutate(fheight=fheight*2.54,
sheight=sheight*2.54)
ggplot(fs, aes(fheight, sheight)) +
geom_abline(slope=1, intercept=0, color="orangered3") +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
labs(x = "Fathers height (cm)",
y = "Sons height (cm)")
shiny::runApp('Desktop/Past Years/2020 Fall/INFO201/Final Project/project-peiwenf')
runApp('Desktop/Past Years/2020 Fall/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/Past Years/2020 Fall/INFO201/Final Project/project-peiwenf/Final Deliverable')
runApp('Desktop/Past Years/2020 Fall/INFO201/Final Project/project-peiwenf/Final Deliverable')
knitr::opts_chunk$set(echo = TRUE)
import pandas as pd
source("~/Desktop/research/2022-Election-Material/Ballotpedia Webscraper/WebscraperBallotpedia.R", echo=TRUE)
setwd("~/")
setwd("~/Desktop/research/2022-Election-Material/Ballotpedia Webscraper")
write.csv(namesFin,"~/Desktop/research/2022-Election-Material/Nov9th_data.csv", row.names = FALSE)
